version: 2.1
description: |
    Install and configure the AWS command-line interface (awscli).
    Arm64 V8 compatible.
display:
    source_url: https://github.com/CircleCI-Public/aws-cli-orb
commands:
    install:
        description: Install the AWS CLI via Pip if not already installed.
        parameters:
            disable-aws-pager:
                default: true
                description: |
                    Set to false to skip forceful disabling of all AWS CLI output paging.
                type: boolean
            override-installed:
                default: false
                description: |
                    By default, if the AWS CLI is detected on the system, the install will be skipped.
                    Enable this to override the installed version and install your specified version.
                type: boolean
            version:
                default: latest
                description: Select a specific version of the AWS v2 CLI. By default the latest version will be used.
                type: string
        steps:
            - run:
                command: |-
                    if [[ $EUID == 0 ]]; then export SUDO=""; else export SUDO="sudo"; fi

                    if [ ! "$(which aws)" ] || [ "$PARAM_AWS_CLI_OVERRIDE" = 1 ]; then
                        # setup
                        if [ ! "$PARAM_AWS_CLI_VERSION" = "latest" ]; then export AWS_CLI_VER_STRING="-$PARAM_AWS_CLI_VERSION"; fi

                        echo "Installing AWS CLI v2"
                        # Platform check
                        if uname -a | grep Darwin; then
                            export SYS_ENV_PLATFORM=darwin
                        elif uname -a | grep Linux; then
                            export SYS_ENV_PLATFORM=linux
                        elif uname -a | grep aarch64; then
                            export SYS_ENV_PLATFORM=arm
                        else
                            echo "This platform appears to be unsupported."
                            uname -a
                            exit 1
                        fi
                        # Install per platform
                        case $SYS_ENV_PLATFORM in
                        linux)
                            curl -sSL "https://awscli.amazonaws.com/awscli-exe-linux-x86_64${AWS_CLI_VER_STRING}.zip" -o "awscliv2.zip"
                            unzip -q awscliv2.zip
                            $SUDO ./aws/install
                            rm awscliv2.zip
                            ;;
                        darwin)
                            curl -sSL "https://awscli.amazonaws.com/AWSCLIV2${AWS_CLI_VER_STRING}.pkg" -o "AWSCLIV2.pkg"
                            $SUDO installer -pkg AWSCLIV2.pkg -target /
                            rm AWSCLIV2.pkg
                            ;;
                        arm)
                            curl -sSL "https://awscli.amazonaws.com/awscli-exe-linux-aarch64${AWS_CLI_VER_STRING}.zip" -o "awscliv2.zip"
                            unzip -q awscliv2.zip
                            $SUDO ./aws/install
                            rm awscliv2.zip
                            ;;
                        *)
                            echo "This orb does not currently support your platform. If you believe it should, please consider opening an issue on the GitHub repository:"
                            echo "https://github.com/CircleCI-Public/aws-cli-orb/issues/new"
                            exit 1
                        ;;
                        esac
                        # Toggle AWS Pager
                        if [ "$PARAM_AWS_CLI_DISABLE_PAGER" = 1 ]; then
                            if [ -z "${AWS_PAGER+x}" ]; then
                                echo 'export AWS_PAGER=""' >> "$BASH_ENV"
                                echo "AWS_PAGER is being set to the empty string to disable all output paging for AWS CLI commands."
                                echo "You can set the 'disable-aws-pager' parameter to 'false' to disable this behavior."
                            fi
                        fi
                    else
                        echo "AWS CLI is already installed, skipping isntallation."
                        aws --version
                    fi
                environment:
                    PARAM_AWS_CLI_DISABLE_PAGER: <<parameters.disable-aws-pager>>
                    PARAM_AWS_CLI_OVERRIDE: <<parameters.override-installed>>
                    PARAM_AWS_CLI_VERSION: <<parameters.version>>
                name: Install AWS CLI - <<parameters.version>>
    setup:
        description: |
            Configure and store AWS credentials in
            ~/.aws/credentials and ~/.aws/config
        parameters:
            aws-access-key-id:
                default: AWS_ACCESS_KEY_ID
                description: |
                    AWS access key id for IAM role. Set this to the name of
                    the environment variable you will use to hold this
                    value, i.e. AWS_ACCESS_KEY.
                type: env_var_name
            aws-region:
                default: AWS_DEFAULT_REGION
                description: |
                    Env var of AWS region to operate in
                    (defaults to AWS_DEFAULT_REGION)
                type: env_var_name
            aws-secret-access-key:
                default: AWS_SECRET_ACCESS_KEY
                description: |
                    AWS secret key for IAM role. Set this to the name of
                    the environment variable you will use to hold this
                    value, i.e. $AWS_SECRET_ACCESS_KEY.
                type: env_var_name
            configure-default-region:
                default: true
                description: |
                    Some AWS actions don't require a region; set this to false if you do not want to store a default region in ~/.aws/config
                type: boolean
            configure-profile-region:
                default: true
                description: |
                    Boolean whether to configure the region for the custom (non-default) profile or not
                type: boolean
            disable-aws-pager:
                default: true
                description: |
                    Set to false to skip forceful disabling of all AWS CLI output paging.
                type: boolean
            override-installed:
                default: false
                description: |
                    By default, if the AWS CLI is detected on the system, the install will be skipped.
                    Enable this to override the installed version and install your specified version.
                type: boolean
            profile-name:
                default: default
                description: Profile name to be configured.
                type: string
            role-arn:
                default: ""
                description: Role ARN that the profile should take.
                type: string
            version:
                default: latest
                description: Select a specific version of the AWS v2 CLI. By default the latest version will be used.
                type: string
        steps:
            - install:
                disable-aws-pager: <<parameters.disable-aws-pager>>
                override-installed: <<parameters.override-installed>>
                version: <<parameters.version>>
            - run:
                command: |
                    aws configure set aws_access_key_id \
                      $<<parameters.aws-access-key-id>> \
                      --profile <<parameters.profile-name>>
                name: Configure AWS Access Key ID
            - run:
                command: |
                    aws configure set aws_secret_access_key \
                      $<<parameters.aws-secret-access-key>> \
                      --profile <<parameters.profile-name>>
                name: Configure AWS Secret Access Key
            - when:
                condition: <<parameters.configure-default-region>>
                steps:
                    - run:
                        command: |
                            aws configure set default.region $<<parameters.aws-region>> \
                              --profile <<parameters.profile-name>>
                        name: Configure AWS default region
            - when:
                condition: <<parameters.configure-profile-region>>
                steps:
                    - run:
                        command: |
                            aws configure set region $<<parameters.aws-region>> \
                              --profile <<parameters.profile-name>>
                        name: Configure AWS profile region
            - when:
                condition: <<parameters.role-arn>>
                steps:
                    - run:
                        command: |
                            aws configure set role_arn <<parameters.role-arn>> \
                              --profile <<parameters.profile-name>>
                        name: Configure AWS profile role
executors:
    default:
        description: |
            Highly cached minimal Ubuntu docker designed for CircleCI with Python and NodeJS installed.
        docker:
            - image: cimg/python:<<parameters.python-version>>
        parameters:
            python-version:
                default: 3.8-node
                description: |
                    Select your python version or any of the available tags here: https://hub.docker.com/r/cimg/python.
                type: string
examples:
    install-aws-cli:
        description: Easily install and configure the AWS CLI automatically in your jobs or commands.
        usage:
            version: "2.1"
            orbs:
                aws-cli: circleci/aws-cli@x.y
            jobs:
                aws-cli-example:
                    executor: aws-cli/default
                    steps:
                        - checkout
                        - aws-cli/setup:
                            profile-name: example
                        - run: echo "Run your code here"
            workflows:
                aws-cli:
                    jobs:
                        - aws-cli-example:
                            context: aws

